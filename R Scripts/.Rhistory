borderCol = "white")
map1 <- mapCountryData(country_map, nameColumnToPlot = "cluster",
catMethod = "categorical",
mapRegion = "world",
missingCountryCol = gray(.9),
colourPalette = viridis(3),
mapTitle = "World Map with K-Means Cluster",
borderCol = "white")
map1 <- mapCountryData(country_map, nameColumnToPlot = "cluster",
catMethod = "categorical",
mapRegion = "world",
missingCountryCol = gray(.9),
colourPalette = viridis(3),
mapTitle = "World Map with K-Means Cluster",
borderCol = "white")
library(glmnet)
library(dplyr)
library(tidyverse)
library(readr)
library(ggcorrplot)
library(factoextra)
library(ggplot2)
library(ggrepel)
library(formattable)
library(cluster)
library(countrycode)
library(rnaturalearth)
library(rworldmap)
library(ggpubr)
library(readxl)
library(openxlsx)
library(caret)
library(reshape2)
library(tidyr)
library(plotly)
library(ggthemes)
library(NbClust)
library(viridis)
library(RColorBrewer)
library(ggforce)
mental_health <- read.xlsx('/Users/tommipremoli8/Desktop/Data Science for Economics/Materie/2nd Semester/Machine Learning e Statistical Learning/Statistical Learning/Individual Project/Datasets/mental_health.xlsx')
View(mental_health)
mental_health <- read.xlsx('/Users/tommipremoli8/Desktop/Data Science for Economics/Materie/2nd Semester/Machine Learning e Statistical Learning/Statistical Learning/Individual Project/Datasets/mental_health.xlsx')
mental_health <- mental_health[, -c(1, 2, 3, 4)]
mental_health$income <- factor(mental_health$income, levels = c("Low", "Middle", "High"), labels = c(1, 2, 3))
mental_health$income <- as.numeric(mental_health$income)
scaled.mental_health <- scale(mental_health)
set.seed(123)
# Within Sum of Squares Plot
wssplot <- function(data, nc=15, seed=123){
wss <- (nrow(data)-1) * sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
wssplot(scaled.mental_health, nc=10)
# Silhouette
set.seed(123)
calculate_silhouette_values <- function(scaled.mental_health, num_clusters) {
set.seed(123)
kmeans_fit <- kmeans(scaled.mental_health, num_clusters)
silhouette_values <- silhouette(kmeans_fit$cluster, dist(scaled.mental_health))
return(silhouette_values)
}
silhouette_values_2 <- calculate_silhouette_values(scaled.mental_health, 2)
silhouette_values_3 <- calculate_silhouette_values(scaled.mental_health, 3)
silhouette_values_4 <- calculate_silhouette_values(scaled.mental_health, 4)
silhouette_values_5 <- calculate_silhouette_values(scaled.mental_health, 5)
silhouette_values_6 <- calculate_silhouette_values(scaled.mental_health, 6)
set.seed(123)
plot(silhouette_values_2, main = 'Silhouette with 2 clusters')
plot(silhouette_values_3, main = 'Silhouette with 3 clusters', col = viridis(3))
plot(silhouette_values_4, main = 'Silhouette with 4 clusters', col = viridis(4))
plot(silhouette_values_5, main = 'Silhouette with 5 clusters')
plot(silhouette_values_6, main = 'Silhouette with 6 clusters')
# NbClust
nc <- NbClust(scaled.mental_health, min.nc=2,
max.nc=6, method="kmeans")
# K-Means Clustering
set.seed(123)
kmeans.clus <- kmeans(x = scaled.mental_health, centers = 3)
mental_health$clusters <- kmeans.clus$cluster
aggr <- aggregate(mental_health,
list(mental_health$clusters), mean)
cluster_colors <- viridis(3)
colorFunction <- function(clusters) {
return(cluster_colors[clusters])
}
upper.panel <- function(x, y) {
points(x, y, pch = 19, col = colorFunction(mental_health$clusters))
r <- round(cor(x, y), digits = 2)
txt <- paste0("R = ", r)
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
text(0.5, 0.9, txt)
}
pairs(mental_health[,1:10], lower.panel = NULL, upper.panel = upper.panel)
pairs(mental_health[,11:19], lower.panel = NULL, upper.panel = upper.panel)
mental_health <- read.xlsx('/Users/tommipremoli8/Desktop/Data Science for Economics/Materie/2nd Semester/Machine Learning e Statistical Learning/Statistical Learning/Individual Project/Datasets/mental_health.xlsx')
cluster_df <- data.frame(cluster = as.factor(kmeans.clus$cluster), scaled.mental_health)
cluster_df$country <- mental_health$country
cluster_df$cluster_colors <- colorFunction(cluster_df$cluster)
pca <- prcomp(scaled.mental_health)
PC1 <- pca$x[, 1]
PC2 <- pca$x[, 2]
cluster_df <- cluster_df %>%
mutate(PC1 = PC1,
PC2 = PC2)
ggplot(cluster_df, aes(x = PC1, y = PC2, color = cluster)) +
geom_point(size = 3) +
geom_text_repel(aes(label = country), size = 3, colour = "#36454F", max.overlaps = 100) +  # Aggiungi i nomi dei paesi
scale_color_manual(values = cluster_colors) +
labs(title = "Contries clustering") +
theme_minimal()
cluster_df$ISO3 <- mental_health$ISO3
country_map <- joinCountryData2Map(cluster_df,
joinCode = "ISO3",
nameJoinColumn = "ISO3")
map1 <- mapCountryData(country_map, nameColumnToPlot = "cluster",
catMethod = "categorical",
mapRegion = "world",
missingCountryCol = gray(.9),
colourPalette = viridis(3),
mapTitle = "World Map with K-Means Cluster",
borderCol = "white")
melted_data <- reshape2::melt(mental_health)
melted_data <- reshape2::melt(mental_health[, -c(1, 2, 3, 4)])
View(melted_data)
library(glmnet)
library(dplyr)
library(tidyverse)
library(readr)
library(ggcorrplot)
library(factoextra)
library(ggplot2)
library(ggrepel)
library(formattable)
library(cluster)
library(countrycode)
library(rnaturalearth)
library(rworldmap)
library(ggpubr)
library(readxl)
library(openxlsx)
library(caret)
library(reshape2)
library(tidyr)
library(plotly)
library(ggthemes)
library(NbClust)
library(viridis)
library(RColorBrewer)
library(ggforce)
mental_health <- read.xlsx('/Users/tommipremoli8/Desktop/Data Science for Economics/Materie/2nd Semester/Machine Learning e Statistical Learning/Statistical Learning/Individual Project/Datasets/mental_health.xlsx')
mental_health <- mental_health[, -c(1, 2, 3, 4)]
mental_health$income <- factor(mental_health$income, levels = c("Low", "Middle", "High"), labels = c(1, 2, 3))
mental_health$income <- as.numeric(mental_health$income)
scaled.mental_health <- scale(mental_health)
set.seed(123)
# Within Sum of Squares Plot
wssplot <- function(data, nc=15, seed=123){
wss <- (nrow(data)-1) * sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
wssplot(scaled.mental_health, nc=10)
# Silhouette
set.seed(123)
calculate_silhouette_values <- function(scaled.mental_health, num_clusters) {
set.seed(123)
kmeans_fit <- kmeans(scaled.mental_health, num_clusters)
silhouette_values <- silhouette(kmeans_fit$cluster, dist(scaled.mental_health))
return(silhouette_values)
}
silhouette_values_2 <- calculate_silhouette_values(scaled.mental_health, 2)
silhouette_values_3 <- calculate_silhouette_values(scaled.mental_health, 3)
silhouette_values_4 <- calculate_silhouette_values(scaled.mental_health, 4)
silhouette_values_5 <- calculate_silhouette_values(scaled.mental_health, 5)
silhouette_values_6 <- calculate_silhouette_values(scaled.mental_health, 6)
set.seed(123)
plot(silhouette_values_2, main = 'Silhouette with 2 clusters')
plot(silhouette_values_3, main = 'Silhouette with 3 clusters', col = viridis(3))
plot(silhouette_values_4, main = 'Silhouette with 4 clusters', col = viridis(4))
plot(silhouette_values_5, main = 'Silhouette with 5 clusters')
plot(silhouette_values_6, main = 'Silhouette with 6 clusters')
# NbClust
nc <- NbClust(scaled.mental_health, min.nc=2,
max.nc=6, method="kmeans")
# K-Means Clustering
set.seed(123)
kmeans.clus <- kmeans(x = scaled.mental_health, centers = 3)
mental_health$clusters <- kmeans.clus$cluster
aggr <- aggregate(mental_health,
list(mental_health$clusters), mean)
cluster_colors <- viridis(3)
colorFunction <- function(clusters) {
return(cluster_colors[clusters])
}
upper.panel <- function(x, y) {
points(x, y, pch = 19, col = colorFunction(mental_health$clusters))
r <- round(cor(x, y), digits = 2)
txt <- paste0("R = ", r)
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
text(0.5, 0.9, txt)
}
pairs(mental_health[,1:10], lower.panel = NULL, upper.panel = upper.panel)
pairs(mental_health[,11:19], lower.panel = NULL, upper.panel = upper.panel)
mental_health <- read.xlsx('/Users/tommipremoli8/Desktop/Data Science for Economics/Materie/2nd Semester/Machine Learning e Statistical Learning/Statistical Learning/Individual Project/Datasets/mental_health.xlsx')
cluster_df <- data.frame(cluster = as.factor(kmeans.clus$cluster), scaled.mental_health)
cluster_df$country <- mental_health$country
cluster_df$cluster_colors <- colorFunction(cluster_df$cluster)
pca <- prcomp(scaled.mental_health)
PC1 <- pca$x[, 1]
PC2 <- pca$x[, 2]
cluster_df <- cluster_df %>%
mutate(PC1 = PC1,
PC2 = PC2)
ggplot(cluster_df, aes(x = PC1, y = PC2, color = cluster)) +
geom_point(size = 3) +
geom_text_repel(aes(label = country), size = 3, colour = "#36454F", max.overlaps = 100) +  # Aggiungi i nomi dei paesi
scale_color_manual(values = cluster_colors) +
labs(title = "Contries clustering") +
theme_minimal()
cluster_df$ISO3 <- mental_health$ISO3
country_map <- joinCountryData2Map(cluster_df,
joinCode = "ISO3",
nameJoinColumn = "ISO3")
map1 <- mapCountryData(country_map, nameColumnToPlot = "cluster",
catMethod = "categorical",
mapRegion = "world",
missingCountryCol = gray(.9),
colourPalette = viridis(3),
mapTitle = "World Map with K-Means Cluster",
borderCol = "white")
melted_data <- melt(cluster_df, id.vars = c("cluster", "country", "cluster_colors"))
View(melted_data)
names(mental_health
)
# Plot density for each variable
ggplot(melted_data, aes(x = depressive_dis, fill = cluster)) +
geom_density(alpha = 0.7) +
facet_wrap(~ variable, scales = "free") +
labs(title = "Density Plot for Each Variable by Cluster", x = "Value", y = "Density") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
View(melted_data)
# Plot density for each variable
ggplot(melted_data, aes(x = variable, fill = cluster)) +
geom_density(alpha = 0.7) +
facet_wrap(~ variable, scales = "free") +
labs(title = "Density Plot for Each Variable by Cluster", x = "Value", y = "Density") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = depressive_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Depressive Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = anxiety_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Depressive Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = bipolar_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Depressive Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = eating_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Depressive Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = drug_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Depressive Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = anxiety_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Depressive Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = anxiety_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Anxiety Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = alcohol, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Alcohol Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = drug_use, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Alcohol Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = drug_user, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Alcohol Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = drug_dis, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Alcohol Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = suicide_rate, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Alcohol Disorders by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = suicide_rate, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Suicide Rate by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = obesity, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Suicide Rate by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = income, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Suicide Rate by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = birthrate, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Birthrate by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = life_exp, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Life Expectancy by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = GDP_per_capita, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for GDP per capita by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
View(cluster_df)
ggplot(cluster_df, aes(x = health_exp, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for GDP per capita by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
ggplot(cluster_df, aes(x = health_exp, fill = factor(cluster))) +
geom_density(alpha = 0.7) +
labs(title = "Density Plot for Health Expenditure by Cluster", x = "Depressive Disorders", y = "Density", fill = "Cluster") +
scale_fill_manual(values = cluster_colors) +
theme_minimal()
# Melt the data for plotting
melted_data <- melt(mental_health, id.vars = c("cluster", "country", "ISO3"))
library(glmnet)
library(dplyr)
library(tidyverse)
library(readr)
library(ggcorrplot)
library(factoextra)
library(ggplot2)
library(ggrepel)
library(formattable)
library(cluster)
library(countrycode)
library(rnaturalearth)
library(rworldmap)
library(ggpubr)
library(readxl)
library(openxlsx)
library(caret)
library(reshape2)
library(tidyr)
library(plotly)
library(ggthemes)
library(NbClust)
library("viridis")
library(RColorBrewer)
library(ggforce)
library(gridExtra)
mental_health <- read.xlsx('/Users/tommipremoli8/Desktop/Data Science for Economics/Materie/2nd Semester/Machine Learning e Statistical Learning/Statistical Learning/Individual Project/Datasets/mental_health.xlsx')
mental_health <- mental_health[, -c(1, 4)]
mental_health$income <- factor(mental_health$income, levels = c("Low", "Middle", "High"), labels = c(1, 2, 3))
mental_health$income <- as.numeric(mental_health$income)
scaled.mental_health <- dist(scale(mental_health[, -c(1, 2)]))
agglo <- function(hc){
data.frame(row.names=paste0("Cluster",seq_along(hc$height)),
height=hc$height,
components=ifelse(hc$merge<0,
hc$labels[abs(hc$merge)], paste0("Cluster",hc$merge)),
stringsAsFactors=FALSE)}
h_average <- hclust(scaled.mental_health, method = "average")
h_average$labels <- mental_health$country
palette_colors <- viridis(5)
fviz_dend(h_average, k = 5, cex = 0.5, k_colors = palette_colors,
color_labels_by_k = TRUE, rect = TRUE, show_labels = TRUE, main = "Hierarchical Cluster with Average Linkage")
h_complete <- hclust(scaled.mental_health, method="complete")
h_complete$labels <- mental_health$country
fviz_dend(h_complete, k = 5, cex = 0.5, k_colors = palette_colors,
color_labels_by_k = TRUE, rect = TRUE, show_labels = TRUE, main = "Hierarchical Cluster with Complete Linkage")
h_ward <- hclust(scaled.mental_health, method="ward.D2")
h_ward$labels <- mental_health$country
fviz_dend(h_ward, k = 5, cex = 0.5, k_colors = palette_colors,
color_labels_by_k = T, rect = T, show_labels = T, main = "Hierarchical  Cluster with Ward Linkage")
ward <- cutree(h_ward, k = 5)
table(ward)
hwardcluster <- cutree(h_ward, k = 5)
hwardcluster
plot(mental_health[, -c(1, 2)], col = palette_colors, main = "Ward Linkage")
means <- aggregate(mental_health[, -1], list(hwardcluster), mean)
means
mental_health$cluster <- hwardcluster
country_map <- joinCountryData2Map(mental_health,
joinCode = "ISO3",
nameJoinColumn = "ISO3")
map1 <- mapCountryData(country_map, nameColumnToPlot = "cluster",
catMethod = "categorical",
mapRegion = "world",
missingCountryCol = gray(.9),
colourPalette = palette_colors,
mapTitle = "World Map with Hierarchical Cluster",
borderCol = "white")
# Melt the data for plotting
melted_data <- melt(mental_health, id.vars = c("cluster", "country", "ISO3"))
# Plot boxplots for each variable colored by cluster
ggplot(melted_data, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Each Variable by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
# Seleziona solo le variabili di interesse
selected_vars <- c("depressive_dis", "unemployment", "anxiety_dis", "alcohol", "eating_dis", "suicide_rate")
mental_health_subset <- mental_health[, c("cluster", selected_vars)]
# Melt the data for plotting
melted_data <- melt(mental_health_subset, id.vars = "cluster")
# Plot boxplots for selected variables
ggplot(melted_data, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
ggplot(melted_data, aes(x = depressive_dis, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
ggplot(melted_data, aes(x = variable$depressive_dis, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
ggplot(melted_data, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
selected_vars <- c("depressive_dis", "unemployment", "anxiety_dis", "drug_dis", "eating_dis", "suicide_rate")
mental_health_subset <- mental_health[, c("cluster", selected_vars)]
melted_data <- melt(mental_health_subset, id.vars = "cluster")
ggplot(melted_data, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
selected_vars <- c("depressive_dis", "unemployment", "anxiety_dis", "alcohol", "eating_dis", "suicide_rate")
mental_health_subset <- mental_health[, c("cluster", selected_vars)]
melted_data <- melt(mental_health_subset, id.vars = "cluster")
ggplot(melted_data, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
selected_vars <- c("depressive_dis", "unemployment", "anxiety_dis", "birthrate", "eating_dis", "suicide_rate")
mental_health_subset <- mental_health[, c("cluster", selected_vars)]
melted_data <- melt(mental_health_subset, id.vars = "cluster")
ggplot(melted_data, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
selected_vars <- c("depressive_dis", "unemployment", "anxiety_dis", "obesity", "eating_dis", "suicide_rate")
mental_health_subset <- mental_health[, c("cluster", selected_vars)]
melted_data <- melt(mental_health_subset, id.vars = "cluster")
ggplot(melted_data, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() +
labs(title = "Boxplot for Selected Variables by Cluster", x = "Variable", y = "Value", fill = "Cluster") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~ variable, scales = "free") +
scale_fill_manual(values = palette_colors)
